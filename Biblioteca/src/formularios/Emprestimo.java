package formularios;

import java.awt.Dimension;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.bean.Emprestimos;
import model.dao.EmprestimoDAO;
import model.bean.Acervo;
import model.dao.AcervoDAO;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
/**
 *
 * @author lyand
 */
public class Emprestimo extends javax.swing.JInternalFrame {

    private String chamada;

    public Emprestimo() {
        initComponents();
        setDate();
        readJTable();
        setClosable(true);
    }

    public void setPosicao() { //Posiciona o JInternalFrame no centro do JFrame Principal.      
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void readJTable() { //Exibe os dados de Empréstimo na JTable.
        DefaultTableModel tblEmp = (DefaultTableModel) tabelaEmprestimo.getModel();
        tblEmp.setNumRows(0);

        EmprestimoDAO emp_dao = new EmprestimoDAO();
        for (Emprestimos emp : emp_dao.read()) {
            tblEmp.addRow(new Object[]{
                emp.getId(),
                emp.getNumChamada(),
                emp.getUsuario(),
                emp.getDataEmp(),
                emp.getDataDev()
            });
        }
    }

    public void alterarQtdExemplares() {
        
    }
    
    public void setDate() {//Configura a exibição das datas de empréstimo e devolução de exemplares.

        LocalDate dEmp = LocalDate.now();
        LocalDate dDev = dEmp.plusDays(7);
        DateTimeFormatter formatador = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        dataEmprestimo.setText(dEmp.format(formatador));
        dataDevolucao.setText(dDev.format(formatador));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        numChamada = new javax.swing.JTextField();
        usuarioEmprestimo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        confirmarEmprestimo = new javax.swing.JButton();
        cancelarEmprestimo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaEmprestimo = new javax.swing.JTable();
        dataDevolucao = new javax.swing.JTextField();
        dataEmprestimo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        editarEmprestimo = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 600));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Empréstimos");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Usuário *");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Nº de Chamada *");

        numChamada.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        usuarioEmprestimo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        usuarioEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioEmprestimoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Data Empréstimo");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Data Devolução");

        confirmarEmprestimo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        confirmarEmprestimo.setText("Confirmar");
        confirmarEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarEmprestimoActionPerformed(evt);
            }
        });

        cancelarEmprestimo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cancelarEmprestimo.setText("Cancelar");
        cancelarEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarEmprestimoActionPerformed(evt);
            }
        });

        tabelaEmprestimo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nº de Chamada", "Usuário", "Data Empréstimo", "Data Devolução"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEmprestimo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaEmprestimoMouseClicked(evt);
            }
        });
        tabelaEmprestimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaEmprestimoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaEmprestimo);

        dataDevolucao.setEditable(false);
        dataDevolucao.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        dataEmprestimo.setEditable(false);
        dataEmprestimo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("Campos marcados com  *  são obrigatórios");

        editarEmprestimo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        editarEmprestimo.setText("Editar");
        editarEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarEmprestimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1))
                    .addComponent(jLabel6))
                .addGap(240, 240, 240))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usuarioEmprestimo)
                            .addComponent(numChamada)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(confirmarEmprestimo)
                .addGap(48, 48, 48)
                .addComponent(editarEmprestimo)
                .addGap(48, 48, 48)
                .addComponent(cancelarEmprestimo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(numChamada, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarioEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(dataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmarEmprestimo)
                    .addComponent(cancelarEmprestimo)
                    .addComponent(editarEmprestimo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarEmprestimoActionPerformed
        doDefaultCloseAction();
    }//GEN-LAST:event_cancelarEmprestimoActionPerformed

    //Confirma o empréstimo de exemplar ao clicar no botão de confirmação.
    private void confirmarEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarEmprestimoActionPerformed
        chamada = numChamada.getText();
        if ((chamada.isBlank()) || (usuarioEmprestimo.getText().isBlank())) {
            JOptionPane.showMessageDialog(null, "Campo obrigatório em branco!");
        } else {
            Emprestimos emprestimo = new Emprestimos();
            EmprestimoDAO dao = new EmprestimoDAO();

            emprestimo.setNumChamada(numChamada.getText());
            emprestimo.setUsuario(usuarioEmprestimo.getText());
            emprestimo.setDataEmp(dataEmprestimo.getText());
            emprestimo.setDataDev(dataDevolucao.getText());

            dao.create(emprestimo);

            numChamada.setText(null);
            usuarioEmprestimo.setText(null);

            readJTable();

            /*Acervo acervo = new Acervo();
            AcervoDAO a_dao = new AcervoDAO();
            
            acervo.setTitulo(acervo.getTitulo());
            acervo.setAutor(acervo.getAutor());
            acervo.setExemplar((acervo.getExemplar() -1));
            acervo.setVolume(acervo.getVolume());
            acervo.setEdicao(acervo.getEdicao());
            acervo.setEditora(acervo.getEditora());
            acervo.setAno_publi(acervo.getAno_publi());
            acervo.setChamada(acervo.getChamada());
            
            a_dao.update(acervo);*/
        }
    }//GEN-LAST:event_confirmarEmprestimoActionPerformed

    //Edita os dados de empréstimo da linha selecionado no JTable.
    private void editarEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarEmprestimoActionPerformed
        if (tabelaEmprestimo.getSelectedRow() != -1) {
            Emprestimos emprestimo = new Emprestimos();
            EmprestimoDAO dao = new EmprestimoDAO();

            emprestimo.setNumChamada(numChamada.getText());
            emprestimo.setUsuario(usuarioEmprestimo.getText());
            emprestimo.setDataEmp(dataEmprestimo.getText());
            emprestimo.setDataDev(dataDevolucao.getText());
            emprestimo.setId((int) tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 0));

            dao.update(emprestimo);

            numChamada.setText(null);
            usuarioEmprestimo.setText(null);

            readJTable();

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Empréstimo para atualizar.");
        }
    }//GEN-LAST:event_editarEmprestimoActionPerformed

    //Seleciona linha da JTable.
    private void tabelaEmprestimoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaEmprestimoKeyReleased
        if (tabelaEmprestimo.getSelectedRow() != -1) {

            numChamada.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 1).toString());
            usuarioEmprestimo.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 2).toString());
            dataEmprestimo.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 3).toString());
            dataDevolucao.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 4).toString());

        }
    }//GEN-LAST:event_tabelaEmprestimoKeyReleased

    //Seleciona linha da JTable.
    private void tabelaEmprestimoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaEmprestimoMouseClicked
        if (tabelaEmprestimo.getSelectedRow() != -1) {

            numChamada.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 1).toString());
            usuarioEmprestimo.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 2).toString());
            dataEmprestimo.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 3).toString());
            dataDevolucao.setText(tabelaEmprestimo.getValueAt(tabelaEmprestimo.getSelectedRow(), 4).toString());

        }
    }//GEN-LAST:event_tabelaEmprestimoMouseClicked

    //Confirma o empréstimo de exemplar ao clicar ENTER.
    private void usuarioEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioEmprestimoActionPerformed
        if ((numChamada.getText().isBlank()) || (usuarioEmprestimo.getText().isBlank())) {
            JOptionPane.showMessageDialog(null, "Campo obrigatório em branco!");
        } else {
            Emprestimos emprestimo = new Emprestimos();
            EmprestimoDAO dao = new EmprestimoDAO();

            emprestimo.setNumChamada(numChamada.getText());
            emprestimo.setUsuario(usuarioEmprestimo.getText());
            emprestimo.setDataEmp(dataEmprestimo.getText());
            emprestimo.setDataDev(dataDevolucao.getText());

            dao.create(emprestimo);

            numChamada.setText(null);
            usuarioEmprestimo.setText(null);

            readJTable();
        }
    }//GEN-LAST:event_usuarioEmprestimoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarEmprestimo;
    private javax.swing.JButton confirmarEmprestimo;
    private javax.swing.JTextField dataDevolucao;
    private javax.swing.JTextField dataEmprestimo;
    private javax.swing.JButton editarEmprestimo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numChamada;
    private javax.swing.JTable tabelaEmprestimo;
    private javax.swing.JTextField usuarioEmprestimo;
    // End of variables declaration//GEN-END:variables
}
